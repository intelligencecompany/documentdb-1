name: Deploy to GitHub Packages and Azure VM

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build . -f .devcontainer/Dockerfile -t documentdb
          docker image tag documentdb ghcr.io/${{ github.repository }}/documentdb:latest
          docker image ls
          docker image push ghcr.io/${{ github.repository }}/documentdb:latest

  # infra:
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #     - name: Azure CLI Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}
      
  #     # - name: Update GitHub Secret with Private Key
  #     #   env:
  #     #     GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     #   run: |
  #     #     gh secret set AZURE_SSH_PRIVATE_KEY -b "${{ steps.create-ssh-key.outputs.private_key }}" -R ${{ github.repository }}
          
  #     - name: Create Azure VM if not exists
  #       run: |
  #         az vm create \
  #           --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
  #           --name TERMSMONITOR \
  #           --image Ubuntu2404 \
  #           --admin-username azureuser \
  #           --generate-ssh-keys \
  #           --size Standard_B1s \
  #           --output none || echo "VM already exists"

  #     - name: Get VM public IP
  #       id: get-vm-ip
  #       run: |
  #         echo "VM_IP=$(az vm show --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name TERMSMONITOR --show-details --query publicIps -o tsv)" >> $GITHUB_ENV
      
  #     - name: Configure SSH
  #       uses: webfactory/ssh-agent@v0.7.0
  #       with:
  #         ssh-private-key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}

  #     - name: Install Docker on VM
  #       run: |

  #         # SSH into the VM and install Docker
  #         ssh -o StrictHostKeyChecking=no azureuser@${{ env.VM_IP }} << 'EOF'
  #           sudo apt-get update
  #           sudo apt-get install -y docker.io
  #           sudo systemctl start docker
  #           sudo systemctl enable docker
  #         EOF
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Azure CLI Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get VM public IP
        id: get-vm-ip
        run: |
          echo "VM_IP=$(az vm show --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name TERMSMONITOR --show-details --query publicIps -o tsv)" >> $GITHUB_ENV
      
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.AZURE_SSH_PRIVATE_KEY }}

      - name: Pull and run Docker image on VM
        run: |
          ssh -o StrictHostKeyChecking=no azureuser@${{ env.VM_IP }} << 'EOF'
            docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
            docker pull ghcr.io/${{ github.repository }}/documentdb:latest
            docker rm -f documentdb 2>/dev/null || true
            docker run -p 9712:9712 -v $(pwd):/home/documentdb/code -i ghcr.io/${{ github.repository }}/documentdb
          EOF